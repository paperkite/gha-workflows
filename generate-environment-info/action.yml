name: Generate environment info
description: Evaluates the workflows running context and determines the environment that is being built

inputs:
  eb-environment-names-dev:
    required: false
    description: A comma seperated value of the Dev EB Environments
  eb-environment-names-qa:
    required: false
    description: A comma seperated value of the QA EB Environments
  eb-environment-names-uat:
    required: false
    description: A comma seperated value of the UAT EB Environments
  eb-environment-names-staging:
    required: false
    description: A comma seperated value of the Staging EB Environments
  eb-environment-names-production:
    required: false
    description: A comma seperated value of the Production EB Environments

outputs:
  name:
    description: The human name of the environment
    value: ${{ steps.evaluate-workflow.outputs.name }}
  prefix:
    description: The environment prefix used for EB environments, image tagging, etc
    value: ${{ steps.evaluate-workflow.outputs.prefix }}
  version:
    description: The version name used for EB versions (the tag version or the prefixed SHA)
    value: ${{ steps.evaluate-workflow.outputs.version }}
  rails-env:
    description: The RAILS_ENV to use for the environment
    value: ${{ steps.evaluate-workflow.outputs.rails-env }}
  sha:
    description: The corresponding Git commits SHA
    value: ${{ steps.generate-sha.outputs.sha }}
  eb-environment-names:
    description: A comma-sepearted-value of the EB Environment names
    value: ${{ steps.evaluate-workflow.outputs.eb-environment-names }}

runs:
  using: composite
  steps:

    - uses: paperkite/github-actions/generate-sha@main
      id: generate-sha

    - name: Evaluate environment
      id: evaluate-environment
      shell: bash
      run: |
        echo "GITHUB_REF_TYPE = $GITHUB_REF_TYPE"
        echo "GITHUB_REF_NAME = $GITHUB_REF_NAME"

        branch_or_tag_regex="^(branch|tag)$"
        # matches
        semmantic_commit_regex="^v[0-9]+\.[0-9]+\.[0-9]+(-[a-z]+(\.[0-9]+)?)?$"

        if [[ $GITHUB_REF_TYPE =~ branch_or_tag_regex && $GITHUB_REF_NAME == "dev" ]]; then
          environment=dev
        elif [[ $GITHUB_REF_TYPE =~ branch_or_tag_regex && $GITHUB_REF_NAME == "qa" ]]; then
          environment=qa
        elif [[ $GITHUB_REF_TYPE =~ branch_or_tag_regex && $GITHUB_REF_NAME == "uat" ]]; then
          environment=uat
        elif [[ $GITHUB_REF_TYPE =~ branch_or_tag_regex && $GITHUB_REF_NAME == "staging" ]]; then
          environment=staging
        elif [[ $GITHUB_REF_TYPE == "tag" && $GITHUB_REF_NAME == "staging" ]]; then
          environment=staging
        else
          echo "Failed to evaluate environment: unexpected ref type ($GITHUB_REF_TYPE) and name ($GITHUB_REF_NAME)"
          exit 1
        fi

        echo "::set-output name=environment::$environment"

    - name: Output environment info
      id: output-environment-info
      shell: bash
      run: |
        environment=${{ steps.evaluate-environment.outputs.environment }}

        if [[ environment == "dev" ]]; then
          echo "::set-output name=name::development"
          echo "::set-output name=prefix::dev"
          echo "::set-output name=version::dev-${{ steps.generate-sha.outputs.sha }}"
          echo "::set-output name=rails-env::dev"
          echo "::set-output name=eb-environment-names::${{ inputs.eb-environment-names-dev }}"
        elif [[ environment == "qa" ]]; then
          echo "::set-output name=name::QA"
          echo "::set-output name=prefix::qa"
          echo "::set-output name=version::qa-${{ steps.generate-sha.outputs.sha }}"
          echo "::set-output name=rails-env::qa"
          echo "::set-output name=eb-environment-names::${{ inputs.eb-environment-names-qa }}"
        elif [[ environment == "uat" ]]; then
          echo "::set-output name=name::UAT"
          echo "::set-output name=prefix::uat"
          echo "::set-output name=version::uat-${{ steps.generate-sha.outputs.sha }}"
          echo "::set-output name=rails-env::uat"
          echo "::set-output name=eb-environment-names::${{ inputs.eb-environment-names-uat }}"
        elif [[ environment == "staging" ]]; then
          echo "::set-output name=name::staging"
          echo "::set-output name=prefix::staging"
          echo "::set-output name=version::staging-${{ steps.generate-sha.outputs.sha }}"
          echo "::set-output name=rails-env::staging"
          echo "::set-output name=eb-environment-names::${{ inputs.eb-environment-names-staging }}"
        elif [[ environment == "production" ]]; then
          echo "::set-output name=name::production"
          echo "::set-output name=prefix::prod"
          echo "::set-output name=version::$GITHUB_REF_NAME"
          echo "::set-output name=rails-env::production"
          echo "::set-output name=eb-environment-names::${{ inputs.eb-environment-names-production }}"
        else
          echo "Failed to set ouputs: unexpected environment ($environment)"
          exit 1
        fi
